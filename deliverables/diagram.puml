@startuml
'uml reference
'https://plantuml.com/ko/class-diagram
'https://www.nextree.co.kr/p6753/
'!theme cerulean


''''''''''''''
''''''''''''''
'relatioin
''''''''''''''
''''''''''''''

interface IMethod {
	doMethod()
}

class Method <<Code>>
IMethod <--righto Method

class Delete
class Get
class Post
class Head
class Put

IMaker <---righto "<<queue>>" ResponseMaker
IMaker <|.. MethodMaker
IMaker <|.. CGIMaker
IMaker <|.. DefaultPageMaker
IMaker <|.. EndResponseMaker
IMaker <|.. ErrorPageMaker
IMaker <|.. IntorceptorMaker

interface IMaker {
	make()
}

class MethodMaker {
	make()
}
class ResponseMaker {
	queue<IMaker*> : _maker
	setExcute()
	executeMaker()
}


IMethod <|.. Get
IMethod <|.. Post
IMethod <|.. Delete
IMethod <|.. Head
IMethod <|.. Put

KqueueManage o--left> RWCallback

FileDescriptor <|-- Socket

Storage <|- SocketStorage

RWCallback <|.. Server
RWCallback <|.. ResponseByCGI
RWCallback <|.. ResponseByFile
RWCallback <|.. CgiTask
RWCallback <|.. PutTask
RWCallback <|...left Client


Response o--right> IBody
IBody <|.. ResponseByCGI
IBody <|.. ResponseByFile
IBody <|.. ResponseByString


Resonse o--right> HTTPStatus

SocketStorage <--o Client

class Client {
	recv(FileDescriptor& fd)
	send(FileDescriptor& fd)
}

class Response {
	-body : string
	+HTTPStatus
}

class Request
class Server
class Socket {
	server_fd : int
	reuse()
	bind()
	listen()
	accept()
	recv()
	send()
}

'class Webserv
'class Time
'class File
'class SHTTP
interface RWCallback {
	recv()
	send()
}
class FileDescriptor {
	-fd : int
}
class HTTPStatus <<Code>>
class Storage
class SocketStorage
class StatusLine
class KqueueManage

class CGIMaker {
	make() 
}
class DefaultPageMaker {
	make()
}
class EndResponseMaker {
	make()
}
class ErrorPageMaker {
	make()
}
class IntorceptorMaker {
	make()
}

''''''''''''''
''''''''''''''
'define
''''''''''''''
''''''''''''''


@enduml
